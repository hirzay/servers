version: "3.9"

services:
  syncthing:
    image: syncthing/syncthing:latest
    container_name: syncthing
    hostname: syncthing
    env_file:
      - "vars.env"
    volumes:
      - syncthing-config:/var/syncthing/
      - /var/storage/syncthing:/syncthing:Z
    ports:
      - 22000:22000/tcp
      - 22000:22000/udp
      - 21027:21027/udp
    restart: unless-stopped
  nginx_tailscale:
    image: nginx:alpine
    container_name: nginx_tailscale
    ports:
      - 100.74.41.106:80:80
      - 100.74.41.106:443:443
      - fd7a:115c:a1e0:ab12:4843:cd96:624a:296a:80:80
      - fd7a:115c:a1e0:ab12:4843:cd96:624a:296a:443:443
    volumes:
      - ./static/tailscale.html:/usr/share/nginx/html/index.html:ro,Z
      - ./config/nginx/includes:/etc/nginx/includes:ro,z
      - ./config/nginx/nginx-tailscale.conf:/etc/nginx/nginx.conf:ro,Z
      - letsencrypt-certs:/etc/letsencrypt:ro
    depends_on:
      - plex
      - overseerr
      - homeassistant
    restart: unless-stopped
    env_file:
      - "vars.env"
  certbot:
    image: certbot/dns-route53
    container_name: certbot
    command: |
      certonly
      --cert-name "shepherdjerred.com"
      -n
      --agree-tos
      -m shepherdjerred@gmail.com
      --dns-route53
      -d tailscale.zeus.shepherdjerred.com
      -d public.zeus.shepherdjerred.com
      -d homeassistant.tailscale.zeus.shepherdjerred.com
      -d homeassistant.public.zeus.shepherdjerred.com
      -d plex.tailscale.zeus.shepherdjerred.com
      -d plex.public.zeus.shepherdjerred.com
      -d overseerr.tailscale.zeus.shepherdjerred.com
      -d overseerr.public.zeus.shepherdjerred.com
      -d influxdb.tailscale.zeus.shepherdjerred.com
    volumes:
      - ./config/credentials:/root/.aws/credentials:ro,Z
      - letsencrypt-certs:/etc/letsencrypt
    env_file:
      - "vars.env"
  grafana:
    image: grafana/grafana-oss:latest
    container_name: grafana
    volumes:
      - ./config/grafana.ini:/etc/grafana/grafana.ini:ro,Z
      - grafana-data:/var/lib/grafana
    depends_on:
      - prometheus
      - loki
      - influxdb
    restart: unless-stopped
    env_file:
      - "vars.env"
    environment:
      GF_INSTALL_PLUGINS: grafana-piechart-panel,grafana-worldmap-panel
  nginx_tailscale_exporter:
    container_name: nginx_tailscale_exporter
    depends_on:
      - nginx_tailscale
    image: nginx/nginx-prometheus-exporter:latest
    command: -nginx.scrape-uri=http://nginx_tailscale:8080/stub_status
    restart: unless-stopped
    env_file:
      - "vars.env"
  node_exporter:
    image: quay.io/prometheus/node-exporter:latest
    container_name: node_exporter
    privileged: true
    command:
      - "--path.rootfs=/host"
    network_mode: host
    pid: host
    restart: unless-stopped
    volumes:
      - "/:/host:ro,rslave"
    env_file:
      - "vars.env"
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    privileged: true
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    restart: unless-stopped
    env_file:
      - "vars.env"
  promtail:
    depends_on:
      - loki
    image: grafana/promtail:latest
    container_name: promtail
    command: -config.file=/etc/promtail/promtail.yml
    volumes:
      - ./config/promtail.yml:/etc/promtail/promtail.yml:ro,Z
      - /var/log/journal:/var/log/journal:ro
      - /run/log/journal:/run/log/journal:ro
      - /etc/machine-id:/etc/machine-id:ro
    restart: unless-stopped
    env_file:
      - "vars.env"
  tailscale:
    image: tailscale/tailscale
    container_name: tailscale
    privileged: true
    command: tailscaled
    network_mode: host
    volumes:
      - /var/lib:/var/lib
      - /dev/net/tun:/dev/net/tun
    restart: unless-stopped
    env_file:
      - "vars.env"
  geoip-updater:
    image: crazymax/geoip-updater:latest
    volumes:
      - "./data/geoip:/data"
    env_file:
      - "./geoip-updater.env"
    restart: unless-stopped
  rtorrent-rutorrent:
    image: crazymax/rtorrent-rutorrent:latest
    expose:
      - "${RT_DHT_PORT}/udp"
      - "${XMLRPC_PORT}"
      - "${RUTORRENT_PORT}"
      - "${WEBDAV_PORT}"
      - "${RT_INC_PORT}"
    ports:
      - target: ${RT_DHT_PORT}
        published: ${RT_DHT_PORT}
        protocol: udp
      - target: ${RUTORRENT_PORT}
        published: ${RUTORRENT_PORT}
        protocol: tcp
      - target: ${WEBDAV_PORT}
        published: ${WEBDAV_PORT}
        protocol: tcp
      - target: ${RT_INC_PORT}
        published: ${RT_INC_PORT}
        protocol: tcp
    env_file:
      - "rtorrent-rutorrent.env"
      - ".env"
    volumes:
      - "./data:/data"
      - "./downloads:/downloads"
      - "./passwd:/passwd"
    ulimits:
      nproc: 65535
      nofile:
        soft: 32000
        hard: 40000
    restart: unless-stopped
  rtorrent-logs:
    image: bash
    command: bash -c 'tail -f /log/*.log'
    depends_on:
      - rtorrent-rutorrent
    volumes:
      - "./data/rtorrent/log:/log"
    restart: unless-stopped
volumes:
  syncthing-config:
  grafana-data:
  prometheus-config:
  prometheus-data:
  loki-data:
  letsencrypt-certs:
