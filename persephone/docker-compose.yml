version: "3.8"
services:
  nginx_tailscale_exporter:
    container_name: nginx_tailscale_exporter
    depends_on:
      - nginx_tailscale
    image: nginx/nginx-prometheus-exporter:latest
    command: -nginx.scrape-uri=http://nginx_tailscale:8080/stub_status
    restart: unless-stopped
    env_file:
      - "vars.env"
  node_exporter:
    image: quay.io/prometheus/node-exporter:latest
    container_name: node_exporter
    privileged: true
    command:
      - "--path.rootfs=/host"
    network_mode: host
    pid: host
    restart: unless-stopped
    volumes:
      - "/:/host:ro,rslave"
    env_file:
      - "vars.env"
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    privileged: true
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    restart: unless-stopped
    env_file:
      - "vars.env"
  promtail:
    depends_on:
      - loki
    image: grafana/promtail:latest
    container_name: promtail
    command: -config.file=/etc/promtail/promtail.yml
    volumes:
      - ./config/promtail.yml:/etc/promtail/promtail.yml:ro,Z
      - /var/log/journal:/var/log/journal:ro
      - /run/log/journal:/run/log/journal:ro
      - /etc/machine-id:/etc/machine-id:ro
    restart: unless-stopped
    env_file:
      - "vars.env"
  tailscale:
    image: tailscale/tailscale
    container_name: tailscale
    privileged: true
    command: tailscaled
    network_mode: host
    volumes:
      - /var/lib:/var/lib
      - /dev/net/tun:/dev/net/tun
    restart: unless-stopped
    env_file:
      - "vars.env"
  certbot:
    image: certbot/dns-route53
    container_name: certbot
    command: |
      certonly
      --cert-name "shepherdjerred.com"
      -n
      --agree-tos
      -m shepherdjerred@gmail.com
      --dns-route53
      -d tailscale.persephone.shepherdjerred.com
      -d public.persephone.shepherdjerred.com
    volumes:
      - ./config/credentials:/root/.aws/credentials:ro,Z
      - letsencrypt-certs:/etc/letsencrypt
    env_file:
      - "vars.env"
  grafana:
    image: grafana/grafana-oss:latest
    container_name: grafana
    volumes:
      - ./config/grafana.ini:/etc/grafana/grafana.ini:ro,Z
      - grafana-data:/var/lib/grafana
    depends_on:
      - prometheus
      - loki
    restart: unless-stopped
    env_file:
      - "vars.env"
    environment:
      GF_INSTALL_PLUGINS: grafana-piechart-panel,grafana-worldmap-panel
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - prometheus-data:/prometheus
      - prometheus-config:/etc/prometheus/
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml:ro,Z
    extra_hosts:
      - host.docker.internal:host-gateway
    depends_on:
      - nginx_tailscale_exporter
      - cadvisor
    restart: unless-stopped
    env_file:
      - "vars.env"
  loki:
    image: grafana/loki:latest
    container_name: loki
    volumes:
      - loki-data:/etc/loki/
      - ./config/loki/loki.yaml:/etc/loki/local-config.yaml:ro,Z
      - ./config/loki/rules.yaml:/etc/loki/rules/fake/rules.yaml/:ro,Z
    restart: unless-stopped
    env_file:
      - "vars.env"
  nginx_tailscale:
    image: nginx:alpine
    container_name: nginx_tailscale
    ports:
      - 100.88.20.114:80:80
      - 100.88.20.114:443:443
      - fd7a:115c:a1e0:ab12:4843:cd96:6258:1472:80:80
      - fd7a:115c:a1e0:ab12:4843:cd96:6258:1472:443:443
    volumes:
      - ./static/tailscale.html:/usr/share/nginx/html/index.html:ro,Z
      - ./config/nginx/includes:/etc/nginx/includes:ro,z
      - ./config/nginx/nginx-tailscale.conf:/etc/nginx/nginx.conf:ro,Z
      - letsencrypt-certs:/etc/letsencrypt:ro
    restart: unless-stopped
    extra_hosts:
      - "host.docker.internal:host-gateway"
    env_file:
      - "vars.env"
    depends_on:
      - tailscale
  syncthing:
    image: syncthing/syncthing:latest
    container_name: syncthing
    hostname: syncthing
    env_file:
      - "vars.env"
    volumes:
      - syncthing-config:/var/syncthing/
      - /home/debian/syncthing:/syncthing:Z
    ports:
      - 22000:22000/tcp
      - 22000:22000/udp
      - 21027:21027/udp
    restart: unless-stopped
  volumerize:
    image: blacklabelops/volumerize:1.7.1
    # command: backup
    container_name: volumerize
    env_file:
      - "vars.env"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - volumerize-cache:/volumerize-cache
      - /home/debian/backup:/target:Z
      - syncthing-config:/source/syncthing-config:ro
      - grafana-data:/source/grafana-data:ro
      - prometheus-config:/source/prometheus-config:ro
      - prometheus-data:/source/prometheus-data:ro
      - loki-data:/source/loki-data:ro
    environment:
      VOLUMERIZE_SOURCE: "/source"
      VOLUMERIZE_TARGET: "file:///target"
      VOLUMERIZE_JOBBER_TIME: "0 0 4 * * *"
      VOLUMERIZE_CONTAINERS: "syncthing grafana prometheus loki"
      VOLUMERIZE_FULL_IF_OLDER_THAN: 28D
    restart: unless-stopped
# Add new volumes to backup if needed.
volumes:
  syncthing-config:
  grafana-data:
  prometheus-config:
  prometheus-data:
  loki-data:
  letsencrypt-certs:
  volumerize-cache:
