apiVersion: apps/v1
kind: Deployment
metadata:
  name: jerred-postgres-c85006ef
spec:
  minReadySeconds: 0
  progressDeadlineSeconds: 600
  replicas: 1
  selector:
    matchLabels:
      cdk8s.io/metadata.addr: jerred-postgres-c8104b8a
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        cdk8s.io/metadata.addr: jerred-postgres-c8104b8a
    spec:
      automountServiceAccountToken: false
      containers:
        - env:
            - name: POSTGRES_PASSWORD
              value: password
            - name: POSTGRES_DB
              value: invidious
          image: postgres
          imagePullPolicy: Always
          name: main
          ports:
            - containerPort: 5432
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
            readOnlyRootFilesystem: false
            runAsNonRoot: false
          startupProbe:
            failureThreshold: 3
            tcpSocket:
              port: 5432
      dnsPolicy: ClusterFirst
      hostNetwork: false
      restartPolicy: Always
      securityContext:
        fsGroupChangePolicy: Always
        runAsNonRoot: true
      setHostnameAsFQDN: false
      terminationGracePeriodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  name: jerred-postgres-service-c8b93ec1
spec:
  externalIPs: []
  ports:
    - port: 5432
      targetPort: 5432
  selector:
    cdk8s.io/metadata.addr: jerred-postgres-c8104b8a
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allowingressc8a64485b8c929f771b4018d6920c37ce-c8626a55
spec:
  ingress:
    - from:
        - podSelector:
            matchLabels:
              cdk8s.io/metadata.addr: jerred-invidious-c8a64485
      ports:
        - port: 5432
          protocol: TCP
  podSelector:
    matchLabels:
      cdk8s.io/metadata.addr: jerred-postgres-c8104b8a
  policyTypes:
    - Ingress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allowegressundefinedc8a64485b8c929f771b4018d6-c8216336
spec:
  egress:
    - ports:
        - port: 5432
          protocol: TCP
      to:
        - podSelector:
            matchLabels:
              cdk8s.io/metadata.addr: jerred-postgres-c8104b8a
  podSelector:
    matchLabels:
      cdk8s.io/metadata.addr: jerred-invidious-c8a64485
  policyTypes:
    - Egress
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jerred-invidious-c8610df6
spec:
  minReadySeconds: 0
  progressDeadlineSeconds: 600
  replicas: 1
  selector:
    matchLabels:
      cdk8s.io/metadata.addr: jerred-invidious-c8a64485
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        cdk8s.io/metadata.addr: jerred-invidious-c8a64485
    spec:
      automountServiceAccountToken: false
      containers:
        - env:
            - name: INVIDIOUS_CONFIG
              value: "

                db:

                \  dbname: invidious

                \  user: postgres

                \  password: password

                \  host: jerred-postgres-service-c8b93ec1

                \  port: 5432

                check_tables: true

                hmac_key: \"rVA6+87s6d8 7f56S4A6S5Df46 advs\"

                \    "
          image: quay.io/invidious/invidious
          imagePullPolicy: Always
          name: main
          ports:
            - containerPort: 3000
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
            readOnlyRootFilesystem: false
            runAsNonRoot: false
          startupProbe:
            failureThreshold: 3
            tcpSocket:
              port: 3000
      dnsPolicy: ClusterFirst
      hostNetwork: false
      restartPolicy: Always
      securityContext:
        fsGroupChangePolicy: Always
        runAsNonRoot: true
      setHostnameAsFQDN: false
      terminationGracePeriodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    tailscale.com/expose: "true"
    tailscale.com/hostname: invidious
  name: jerred-invidious-service-c8827da5
spec:
  externalIPs: []
  ports:
    - name: https
      port: 3000
  selector:
    cdk8s.io/metadata.addr: jerred-invidious-c8a64485
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jerred-redis-c81625d6
spec:
  minReadySeconds: 0
  progressDeadlineSeconds: 600
  replicas: 1
  selector:
    matchLabels:
      cdk8s.io/metadata.addr: jerred-redis-c8da9e76
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        cdk8s.io/metadata.addr: jerred-redis-c8da9e76
    spec:
      automountServiceAccountToken: false
      containers:
        - image: redis
          imagePullPolicy: Always
          name: main
          ports:
            - containerPort: 6379
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: false
          startupProbe:
            failureThreshold: 3
            tcpSocket:
              port: 6379
      dnsPolicy: ClusterFirst
      hostNetwork: false
      restartPolicy: Always
      securityContext:
        fsGroupChangePolicy: Always
        runAsNonRoot: true
      setHostnameAsFQDN: false
      terminationGracePeriodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  name: jerred-redis-service-c8ea8a2c
spec:
  externalIPs: []
  ports:
    - port: 6379
      targetPort: 6379
  selector:
    cdk8s.io/metadata.addr: jerred-redis-c8da9e76
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allowingressc81f7043b360d70608e5a49009276dc2d-c89df41b
spec:
  ingress:
    - from:
        - podSelector:
            matchLabels:
              cdk8s.io/metadata.addr: jerred-teddit-c81f7043
      ports:
        - port: 6379
          protocol: TCP
  podSelector:
    matchLabels:
      cdk8s.io/metadata.addr: jerred-redis-c8da9e76
  policyTypes:
    - Ingress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allowegressundefinedc81f7043b360d70608e5a4900-c831af7e
spec:
  egress:
    - ports:
        - port: 6379
          protocol: TCP
      to:
        - podSelector:
            matchLabels:
              cdk8s.io/metadata.addr: jerred-redis-c8da9e76
  podSelector:
    matchLabels:
      cdk8s.io/metadata.addr: jerred-teddit-c81f7043
  policyTypes:
    - Egress
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jerred-teddit-c82fa327
spec:
  minReadySeconds: 0
  progressDeadlineSeconds: 600
  replicas: 1
  selector:
    matchLabels:
      cdk8s.io/metadata.addr: jerred-teddit-c81f7043
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        cdk8s.io/metadata.addr: jerred-teddit-c81f7043
    spec:
      automountServiceAccountToken: false
      containers:
        - env:
            - name: REDIS_HOST
              value: jerred-redis-service-c8ea8a2c
          image: teddit/teddit
          imagePullPolicy: Always
          name: main
          ports:
            - containerPort: 8080
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
            readOnlyRootFilesystem: false
            runAsNonRoot: false
          startupProbe:
            failureThreshold: 3
            tcpSocket:
              port: 8080
      dnsPolicy: ClusterFirst
      hostNetwork: false
      restartPolicy: Always
      securityContext:
        fsGroupChangePolicy: Always
        runAsNonRoot: true
      setHostnameAsFQDN: false
      terminationGracePeriodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    tailscale.com/expose: "true"
    tailscale.com/hostname: teddit
  name: jerred-teddit-service-c8d08b6d
spec:
  externalIPs: []
  ports:
    - name: https
      port: 8080
  selector:
    cdk8s.io/metadata.addr: jerred-teddit-c81f7043
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jerred-plex-c8562040
spec:
  minReadySeconds: 0
  progressDeadlineSeconds: 600
  replicas: 1
  selector:
    matchLabels:
      cdk8s.io/metadata.addr: jerred-plex-c8024da6
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        cdk8s.io/metadata.addr: jerred-plex-c8024da6
    spec:
      automountServiceAccountToken: false
      containers:
        - image: plexinc/pms-docker
          imagePullPolicy: Always
          name: main
          ports:
            - containerPort: 32400
              name: port-32400
              protocol: TCP
            - containerPort: 3005
              name: port-3005
              protocol: TCP
            - containerPort: 8324
              name: port-8324
              protocol: TCP
            - containerPort: 32469
              name: port-32469
              protocol: TCP
            - containerPort: 32410
              name: port-32410
              protocol: UDP
            - containerPort: 32412
              name: port-32412
              protocol: UDP
            - containerPort: 32413
              name: port-32413
              protocol: UDP
            - containerPort: 32414
              name: port-32414
              protocol: UDP
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
            readOnlyRootFilesystem: false
            runAsNonRoot: false
      dnsPolicy: ClusterFirst
      hostNetwork: false
      restartPolicy: Always
      securityContext:
        fsGroupChangePolicy: Always
        runAsNonRoot: true
      setHostnameAsFQDN: false
      terminationGracePeriodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    tailscale.com/expose: "true"
    tailscale.com/hostname: plex
  name: jerred-plex-service-c8eab0d6
spec:
  externalIPs: []
  ports:
    - name: https
      port: 32400
  selector:
    cdk8s.io/metadata.addr: jerred-plex-c8024da6
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jerred-radarr-c845967c
spec:
  minReadySeconds: 0
  progressDeadlineSeconds: 600
  replicas: 1
  selector:
    matchLabels:
      cdk8s.io/metadata.addr: jerred-radarr-c89ce6f7
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        cdk8s.io/metadata.addr: jerred-radarr-c89ce6f7
    spec:
      automountServiceAccountToken: false
      containers:
        - image: lscr.io/linuxserver/radarr
          imagePullPolicy: Always
          name: main
          ports:
            - containerPort: 7878
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
            readOnlyRootFilesystem: false
            runAsNonRoot: false
          startupProbe:
            failureThreshold: 3
            tcpSocket:
              port: 7878
      dnsPolicy: ClusterFirst
      hostNetwork: false
      restartPolicy: Always
      securityContext:
        fsGroupChangePolicy: Always
        runAsNonRoot: true
      setHostnameAsFQDN: false
      terminationGracePeriodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    tailscale.com/expose: "true"
    tailscale.com/hostname: radarr
  name: jerred-radarr-service-c83b8880
spec:
  externalIPs: []
  ports:
    - name: https
      port: 7878
  selector:
    cdk8s.io/metadata.addr: jerred-radarr-c89ce6f7
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jerred-bazarr-c8cb7bbc
spec:
  minReadySeconds: 0
  progressDeadlineSeconds: 600
  replicas: 1
  selector:
    matchLabels:
      cdk8s.io/metadata.addr: jerred-bazarr-c8418a60
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        cdk8s.io/metadata.addr: jerred-bazarr-c8418a60
    spec:
      automountServiceAccountToken: false
      containers:
        - image: lscr.io/linuxserver/bazarr
          imagePullPolicy: Always
          name: main
          ports:
            - containerPort: 6767
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
            readOnlyRootFilesystem: false
            runAsNonRoot: false
          startupProbe:
            failureThreshold: 3
            tcpSocket:
              port: 6767
      dnsPolicy: ClusterFirst
      hostNetwork: false
      restartPolicy: Always
      securityContext:
        fsGroupChangePolicy: Always
        runAsNonRoot: true
      setHostnameAsFQDN: false
      terminationGracePeriodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    tailscale.com/expose: "true"
    tailscale.com/hostname: bazarr
  name: jerred-bazarr-service-c8f986f7
spec:
  externalIPs: []
  ports:
    - name: https
      port: 6767
  selector:
    cdk8s.io/metadata.addr: jerred-bazarr-c8418a60
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jerred-homeassistant-c8be839d
spec:
  minReadySeconds: 0
  progressDeadlineSeconds: 600
  replicas: 1
  selector:
    matchLabels:
      cdk8s.io/metadata.addr: jerred-homeassistant-c8be9848
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        cdk8s.io/metadata.addr: jerred-homeassistant-c8be9848
    spec:
      automountServiceAccountToken: false
      containers:
        - image: ghcr.io/home-assistant/home-assistant:stable
          imagePullPolicy: Always
          name: main
          ports:
            - containerPort: 8123
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
            readOnlyRootFilesystem: false
            runAsNonRoot: false
          startupProbe:
            failureThreshold: 3
            tcpSocket:
              port: 8123
      dnsPolicy: ClusterFirst
      hostNetwork: false
      restartPolicy: Always
      securityContext:
        fsGroupChangePolicy: Always
        runAsNonRoot: true
      setHostnameAsFQDN: false
      terminationGracePeriodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    tailscale.com/expose: "true"
    tailscale.com/hostname: homeassistant
  name: jerred-homeassistant-service-c8b310f5
spec:
  externalIPs: []
  ports:
    - name: https
      port: 8123
  selector:
    cdk8s.io/metadata.addr: jerred-homeassistant-c8be9848
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jerred-jackett-c8624c67
spec:
  minReadySeconds: 0
  progressDeadlineSeconds: 600
  replicas: 1
  selector:
    matchLabels:
      cdk8s.io/metadata.addr: jerred-jackett-c808e979
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        cdk8s.io/metadata.addr: jerred-jackett-c808e979
    spec:
      automountServiceAccountToken: false
      containers:
        - image: lscr.io/linuxserver/jackett
          imagePullPolicy: Always
          name: main
          ports:
            - containerPort: 9117
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
            readOnlyRootFilesystem: false
            runAsNonRoot: false
          startupProbe:
            failureThreshold: 3
            tcpSocket:
              port: 9117
      dnsPolicy: ClusterFirst
      hostNetwork: false
      restartPolicy: Always
      securityContext:
        fsGroupChangePolicy: Always
        runAsNonRoot: true
      setHostnameAsFQDN: false
      terminationGracePeriodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    tailscale.com/expose: "true"
    tailscale.com/hostname: jackett
  name: jerred-jackett-service-c8e7054d
spec:
  externalIPs: []
  ports:
    - name: https
      port: 9117
  selector:
    cdk8s.io/metadata.addr: jerred-jackett-c808e979
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jerred-nitter-c8e9abe2
spec:
  minReadySeconds: 0
  progressDeadlineSeconds: 600
  replicas: 1
  selector:
    matchLabels:
      cdk8s.io/metadata.addr: jerred-nitter-c8a60e60
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        cdk8s.io/metadata.addr: jerred-nitter-c8a60e60
    spec:
      automountServiceAccountToken: false
      containers:
        - image: zedeus/nitter
          imagePullPolicy: Always
          name: main
          ports:
            - containerPort: 8080
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
            readOnlyRootFilesystem: false
            runAsNonRoot: false
          startupProbe:
            failureThreshold: 3
            tcpSocket:
              port: 8080
      dnsPolicy: ClusterFirst
      hostNetwork: false
      restartPolicy: Always
      securityContext:
        fsGroupChangePolicy: Always
        runAsNonRoot: true
      setHostnameAsFQDN: false
      terminationGracePeriodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    tailscale.com/expose: "true"
    tailscale.com/hostname: nitter
  name: jerred-nitter-service-c8e57b46
spec:
  externalIPs: []
  ports:
    - name: https
      port: 8080
  selector:
    cdk8s.io/metadata.addr: jerred-nitter-c8a60e60
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jerred-overseerr-c82662c6
spec:
  minReadySeconds: 0
  progressDeadlineSeconds: 600
  replicas: 1
  selector:
    matchLabels:
      cdk8s.io/metadata.addr: jerred-overseerr-c81b0680
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        cdk8s.io/metadata.addr: jerred-overseerr-c81b0680
    spec:
      automountServiceAccountToken: false
      containers:
        - image: lscr.io/linuxserver/overseerr
          imagePullPolicy: Always
          name: main
          ports:
            - containerPort: 5055
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
            readOnlyRootFilesystem: false
            runAsNonRoot: false
          startupProbe:
            failureThreshold: 3
            tcpSocket:
              port: 5055
      dnsPolicy: ClusterFirst
      hostNetwork: false
      restartPolicy: Always
      securityContext:
        fsGroupChangePolicy: Always
        runAsNonRoot: true
      setHostnameAsFQDN: false
      terminationGracePeriodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    tailscale.com/expose: "true"
    tailscale.com/hostname: overseerr
  name: jerred-overseerr-service-c8aa8202
spec:
  externalIPs: []
  ports:
    - name: https
      port: 5055
  selector:
    cdk8s.io/metadata.addr: jerred-overseerr-c81b0680
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jerred-qbittorrent-c8799201
spec:
  minReadySeconds: 0
  progressDeadlineSeconds: 600
  replicas: 1
  selector:
    matchLabels:
      cdk8s.io/metadata.addr: jerred-qbittorrent-c845f9f8
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        cdk8s.io/metadata.addr: jerred-qbittorrent-c845f9f8
    spec:
      automountServiceAccountToken: false
      containers:
        - image: lscr.io/linuxserver/qbittorrent
          imagePullPolicy: Always
          name: main
          ports:
            - containerPort: 8080
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
            readOnlyRootFilesystem: false
            runAsNonRoot: false
          startupProbe:
            failureThreshold: 3
            tcpSocket:
              port: 8080
      dnsPolicy: ClusterFirst
      hostNetwork: false
      restartPolicy: Always
      securityContext:
        fsGroupChangePolicy: Always
        runAsNonRoot: true
      setHostnameAsFQDN: false
      terminationGracePeriodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    tailscale.com/expose: "true"
    tailscale.com/hostname: qbittorrent
  name: jerred-qbittorrent-service-c83eba8d
spec:
  externalIPs: []
  ports:
    - name: https
      port: 8080
  selector:
    cdk8s.io/metadata.addr: jerred-qbittorrent-c845f9f8
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jerred-sonarr-c8a61d8f
spec:
  minReadySeconds: 0
  progressDeadlineSeconds: 600
  replicas: 1
  selector:
    matchLabels:
      cdk8s.io/metadata.addr: jerred-sonarr-c83efdfd
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        cdk8s.io/metadata.addr: jerred-sonarr-c83efdfd
    spec:
      automountServiceAccountToken: false
      containers:
        - image: lscr.io/linuxserver/sonarr
          imagePullPolicy: Always
          name: main
          ports:
            - containerPort: 8989
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
            readOnlyRootFilesystem: false
            runAsNonRoot: false
          startupProbe:
            failureThreshold: 3
            tcpSocket:
              port: 8989
      dnsPolicy: ClusterFirst
      hostNetwork: false
      restartPolicy: Always
      securityContext:
        fsGroupChangePolicy: Always
        runAsNonRoot: true
      setHostnameAsFQDN: false
      terminationGracePeriodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    tailscale.com/expose: "true"
    tailscale.com/hostname: sonarr
  name: jerred-sonarr-service-c81da467
spec:
  externalIPs: []
  ports:
    - name: https
      port: 8989
  selector:
    cdk8s.io/metadata.addr: jerred-sonarr-c83efdfd
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jerred-syncthing-c881dc3b
spec:
  minReadySeconds: 0
  progressDeadlineSeconds: 600
  replicas: 1
  selector:
    matchLabels:
      cdk8s.io/metadata.addr: jerred-syncthing-c840ef17
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        cdk8s.io/metadata.addr: jerred-syncthing-c840ef17
    spec:
      automountServiceAccountToken: false
      containers:
        - image: lscr.io/linuxserver/syncthing
          imagePullPolicy: Always
          name: main
          ports:
            - containerPort: 8384
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
            readOnlyRootFilesystem: false
            runAsNonRoot: false
          startupProbe:
            failureThreshold: 3
            tcpSocket:
              port: 8384
      dnsPolicy: ClusterFirst
      hostNetwork: false
      restartPolicy: Always
      securityContext:
        fsGroupChangePolicy: Always
        runAsNonRoot: true
      setHostnameAsFQDN: false
      terminationGracePeriodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    tailscale.com/expose: "true"
    tailscale.com/hostname: syncthing
  name: jerred-syncthing-service-c85923e3
spec:
  externalIPs: []
  ports:
    - name: https
      port: 8384
  selector:
    cdk8s.io/metadata.addr: jerred-syncthing-c840ef17
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jerred-tautulli-c80e68e0
spec:
  minReadySeconds: 0
  progressDeadlineSeconds: 600
  replicas: 1
  selector:
    matchLabels:
      cdk8s.io/metadata.addr: jerred-tautulli-c823447b
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        cdk8s.io/metadata.addr: jerred-tautulli-c823447b
    spec:
      automountServiceAccountToken: false
      containers:
        - image: lscr.io/linuxserver/tautulli
          imagePullPolicy: Always
          name: main
          ports:
            - containerPort: 8181
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
            readOnlyRootFilesystem: false
            runAsNonRoot: false
          startupProbe:
            failureThreshold: 3
            tcpSocket:
              port: 8181
      dnsPolicy: ClusterFirst
      hostNetwork: false
      restartPolicy: Always
      securityContext:
        fsGroupChangePolicy: Always
        runAsNonRoot: true
      setHostnameAsFQDN: false
      terminationGracePeriodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    tailscale.com/expose: "true"
    tailscale.com/hostname: tautulli
  name: jerred-tautulli-service-c8523b59
spec:
  externalIPs: []
  ports:
    - name: https
      port: 8181
  selector:
    cdk8s.io/metadata.addr: jerred-tautulli-c823447b
  type: ClusterIP
