---
services:
  factorio:
    container_name: factorio
    image: factoriotools/factorio:stable
    volumes:
      - /mnt/storage/games/factorio:/factorio:Z
    ports:
      - 34197:34197/udp
  matt:
    container_name: matt_minecraft
    image: ghcr.io/shepherdjerred-minecraft/spigot:1.19
    volumes:
      - /mnt/storage/games/matt_minecraft:/home/minecraft/server:Z
    ports:
      - 25566:25565/tcp
      - 25566:25565/udp
    command: -Xmx2G -jar "../spigot.jar"
  glitter_minecraft:
    container_name: glitter_minecraft
    image: ghcr.io/shepherdjerred-minecraft/spigot:1.19
    volumes:
      - /mnt/storage/games/glitter_minecraft:/home/minecraft/server:Z
    ports:
      - 25565:25565/tcp
      - 25565:25565/udp
    command: -Xmx2G -jar "../spigot.jar"
  apprise:
    container_name: apprise
    env_file:
      - vars.env
    image: lscr.io/linuxserver/apprise-api
    restart: unless-stopped
    volumes:
      - apprise-config:/config
  bazarr:
    container_name: bazarr
    env_file:
      - vars.env
    image: lscr.io/linuxserver/bazarr
    restart: unless-stopped
    volumes:
      - bazarr-config:/config
      - /mnt/storage/media/movies:/movies:z
      - /mnt/storage/media/tv:/tv:z
  blackbox:
    command: "--config.file=/config/blackbox.yml"
    container_name: blackbox
    env_file:
      - vars.env
    image: prom/blackbox-exporter:master
    restart: unless-stopped
    volumes:
      - ./config/blackbox:/config:Z
  cadvisor:
    container_name: cadvisor
    env_file:
      - vars.env
    image: gcr.io/cadvisor/cadvisor:latest
    privileged: true
    restart: unless-stopped
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
  certbot:
    command: |
      certonly
      --cert-name "shepherdjerred.com"
      -n
      --agree-tos
      -m shepherdjerred@gmail.com
      --dns-route53
      -d tailscale.zeus.shepherdjerred.com
      -d public.zeus.shepherdjerred.com
      -d homeassistant.tailscale.zeus.shepherdjerred.com
      -d homeassistant.public.zeus.shepherdjerred.com
      -d plex.tailscale.zeus.shepherdjerred.com
      -d plex.public.zeus.shepherdjerred.com
      -d overseerr.tailscale.zeus.shepherdjerred.com
      -d overseerr.public.zeus.shepherdjerred.com
      -d influxdb.tailscale.zeus.shepherdjerred.com
      -d prometheus.tailscale.zeus.shepherdjerred.com
      -d tailscale.zeus.sjer.red
      -d public.zeus.sjer.red
      -d homeassistant.tailscale.zeus.sjer.red
      -d homeassistant.public.zeus.sjer.red
      -d plex.tailscale.zeus.sjer.red
      -d plex.public.zeus.sjer.red
      -d overseerr.tailscale.zeus.sjer.red
      -d overseerr.public.zeus.sjer.red
      -d influxdb.tailscale.zeus.sjer.red
      -d prometheus.tailscale.zeus.sjer.red
    container_name: certbot
    env_file:
      - vars.env
    image: certbot/dns-route53
    restart: "no"
    volumes:
      - ./config/credentials:/root/.aws/credentials:ro,Z
      - letsencrypt-certs:/etc/letsencrypt
  flaresolverr:
    container_name: flaresolverr
    env_file:
      - vars.env
    image: ghcr.io/flaresolverr/flaresolverr:latest
    restart: unless-stopped
  grafana:
    container_name: grafana
    env_file:
      - vars.env
    environment:
      GF_INSTALL_PLUGINS: grafana-piechart-panel,grafana-worldmap-panel
    image: grafana/grafana-oss:latest
    restart: unless-stopped
    volumes:
      - ./config/grafana.ini:/etc/grafana/grafana.ini:ro,Z
      - grafana-data:/var/lib/grafana
  homeassistant:
    container_name: homeassistant
    env_file:
      - vars.env
    image: ghcr.io/home-assistant/home-assistant:stable
    ports:
      - 1400:1400 # Sonos
      - 21068:21068 # HomeKit?
      - 21067:21067 # HomeKit?
      - 21066:21066 # HomeKit?
      - 21064:21064 # HomeKit?
      - 21063:21063 # HomeKit
      - 5353:5353/udp # HomeKit
    restart: unless-stopped
    volumes:
      - homeassistant-config:/config
      - ./config/homeassistant/configuration.yaml:/config/configuration.yaml:Z
      - ./config/homeassistant/secrets.yaml:/config/secrets.yaml:Z
  influxdb:
    container_name: influxdb
    env_file:
      - vars.env
    image: influxdb:alpine
    restart: unless-stopped
    volumes:
      - influxdb-data:/var/lib/influxdb2
  jackett:
    container_name: jackett
    env_file:
      - vars.env
    image: lscr.io/linuxserver/jackett:latest
    restart: unless-stopped
    volumes:
      - jackett-config:/config
  loki:
    container_name: loki
    env_file:
      - vars.env
    image: grafana/loki:latest
    restart: unless-stopped
    volumes:
      - loki-data:/etc/loki/
      - ./config/loki/loki.yaml:/etc/loki/local-config.yaml:ro,Z
      - ./config/loki/rules.yaml:/etc/loki/rules/fake/rules.yaml/:ro,Z
  nginx_public:
    container_name: nginx_public
    env_file:
      - vars.env
    image: nginx:alpine
    ports:
      - 192.168.1.45:80:80
      - 192.168.1.45:443:443
      - 2601:602:8200:277c:325a:3aff:fe7b:6fd5:80:80
      - 2601:602:8200:277c:325a:3aff:fe7b:6fd5:443:443
    restart: unless-stopped
    volumes:
      - ./static/public.html:/usr/share/nginx/html/index.html:ro,Z
      - ./config/nginx/includes:/etc/nginx/includes:ro,z
      - ./config/nginx/nginx-public.conf:/etc/nginx/nginx.conf:ro,Z
      - letsencrypt-certs:/etc/letsencrypt:ro
  nginx_public_exporter:
    command: "-nginx.scrape-uri=http://nginx_public:8080/stub_status"
    container_name: nginx_public_exporter
    env_file:
      - vars.env
    image: nginx/nginx-prometheus-exporter:latest
    restart: unless-stopped
  nginx_tailscale:
    container_name: nginx_tailscale
    depends_on:
      - tailscale
    env_file:
      - vars.env
    image: nginx:alpine
    ports:
      - 100.96.254.65:80:80
      - 100.96.254.65:443:443
      - fd7a:115c:a1e0:ab12:4843:cd96:6260:fe41:80:80
      - fd7a:115c:a1e0:ab12:4843:cd96:6260:fe41:443:443
    restart: unless-stopped
    volumes:
      - ./static/tailscale.html:/usr/share/nginx/html/index.html:ro,Z
      - ./config/nginx/includes:/etc/nginx/includes:ro,z
      - ./config/nginx/nginx-tailscale.conf:/etc/nginx/nginx.conf:ro,Z
      - letsencrypt-certs:/etc/letsencrypt:ro
  nginx_tailscale_exporter:
    command: "-nginx.scrape-uri=http://nginx_tailscale:8080/stub_status"
    container_name: nginx_tailscale_exporter
    env_file:
      - vars.env
    image: nginx/nginx-prometheus-exporter:latest
    restart: unless-stopped
  node_exporter:
    command:
      - "--path.rootfs=/host"
    container_name: node_exporter
    env_file:
      - vars.env
    image: quay.io/prometheus/node-exporter:latest
    network_mode: host
    pid: host
    restart: unless-stopped
    volumes:
      - /:/host:ro,rslave
  nvidia_exporter:
    container_name: nvidia_exporter
    deploy:
      resources:
        reservations:
          devices:
            - capabilities:
                - gpu
    env_file:
      - vars.env
    image: nvcr.io/nvidia/k8s/dcgm-exporter:2.3.4-2.6.4-ubuntu20.04
    restart: unless-stopped
  overseerr:
    container_name: overseerr
    env_file:
      - vars.env
    image: lscr.io/linuxserver/overseerr:latest
    restart: unless-stopped
    volumes:
      - overseerr-config:/config
  plex:
    container_name: plex
    deploy:
      resources:
        reservations:
          devices:
            - capabilities:
                - gpu
    env_file:
      - vars.env
    environment:
      ADVERTISE_IP: http://67.171.2.123:32400,http://100.103.244.82:32400,http://192.168.1.45:32400
      NVIDIA_DRIVER_CAPABILITIES: all
      NVIDIA_VISIBLE_DEVICES: all
    image: plexinc/pms-docker:latest
    ports:
      - 32400:32400/tcp
      - 3005:3005/tcp
      - 8324:8324/tcp
      - 32469:32469/tcp
      - 32410:32410/udp
      - 32412:32412/udp
      - 32413:32413/udp
      - 32414:32414/udp
    restart: unless-stopped
    shm_size: 8GB
    volumes:
      - /mnt/storage/plex:/config:z
      - /dev/shm:/transcode
      - /mnt/storage/media/tv:/data/tv:z
      - /mnt/storage/media/movies:/data/movies:z
      - /mnt/storage/media/other:/data/other:z
    devices:
      - /dev/dvb:/dev/dvb
  prometheus:
    container_name: prometheus
    env_file:
      - vars.env
    extra_hosts:
      - host.docker.internal:host-gateway
    image: prom/prometheus:latest
    restart: unless-stopped
    volumes:
      - prometheus-data:/prometheus
      - prometheus-config:/etc/prometheus/
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml:ro,Z
    command: "--storage.tsdb.retention.time=365d --config.file=/etc/prometheus/prometheus.yml"
  promtail:
    command: "-config.file=/etc/promtail/promtail.yml"
    container_name: promtail
    env_file:
      - vars.env
    image: grafana/promtail:latest
    restart: unless-stopped
    volumes:
      - ./config/promtail.yml:/etc/promtail/promtail.yml:ro,Z
      - /var/log/journal:/var/log/journal:ro
      - /run/log/journal:/run/log/journal:ro
      - /etc/machine-id:/etc/machine-id:ro
  radarr:
    container_name: radarr
    env_file:
      - vars.env
    image: lscr.io/linuxserver/radarr:latest
    restart: unless-stopped
    volumes:
      - radarr-config:/config
      - /mnt/storage/media/movies:/movies:z
      - /mnt/storage/syncthing/Torrents:/downloads:z
  sonarr:
    container_name: sonarr
    env_file:
      - vars.env
    image: lscr.io/linuxserver/sonarr:latest
    restart: unless-stopped
    volumes:
      - sonarr-config:/config
      - /mnt/storage/media/tv:/tv:z
      - /mnt/storage/syncthing/Torrents:/downloads:z
  speedtest:
    container_name: speedtest
    env_file:
      - vars.env
    image: jraviles/prometheus_speedtest:latest
    restart: unless-stopped
  syncthing:
    container_name: syncthing
    env_file:
      - vars.env
    hostname: syncthing
    image: syncthing/syncthing:latest
    ports:
      - 22000:22000/tcp
      - 22000:22000/udp
      - 21027:21027/udp
    restart: unless-stopped
    volumes:
      - syncthing-config:/var/syncthing/
      - /mnt/storage/syncthing:/syncthing:Z
  syncthing_exporter:
    container_name: syncthing_exporter
    env_file:
      - vars.env
    environment:
      SYNCTHING_TOKEN: Gx4RRiqFLaqcx3Z4MD2ZokjaWmW4DweP
      SYNCTHING_URI: http://syncthing:8384/
    image: f100024/syncthing_exporter:latest
    restart: unless-stopped
  tailscale:
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    command: tailscaled
    container_name: tailscale
    env_file:
      - vars.env
    image: tailscale/tailscale
    network_mode: host
    restart: unless-stopped
    volumes:
      - /var/lib:/var/lib
      - /dev/net/tun:/dev/net/tun
      - tailscale-data:/tailscale
  tautulli:
    container_name: tautulli
    env_file:
      - vars.env
    image: ghcr.io/tautulli/tautulli:latest
    restart: unless-stopped
    volumes:
      - tautulli-data:/config
      - /mnt/storage/plex/Plex\ Media\ Server/Logs:/plex_logs:ro,z
  timemachine:
    container_name: timemachine
    env_file:
      - vars.env
    image: mbentley/timemachine:smb
    restart: unless-stopped
    ports:
      - fd7a:115c:a1e0:ab12:4843:cd96:6260:fe41:137:137/udp
      - fd7a:115c:a1e0:ab12:4843:cd96:6260:fe41:138:138/udp
      - fd7a:115c:a1e0:ab12:4843:cd96:6260:fe41:139:139
      - fd7a:115c:a1e0:ab12:4843:cd96:6260:fe41:445:445
      - 100.96.254.65:137:137/udp
      - 100.96.254.65:138:138/udp
      - 100.96.254.65:139:139
      - 100.96.254.65:445:445
    ulimits:
      nofile:
        hard: 65536
        soft: 65536
    volumes:
      - /mnt/timemachine:/opt/timemachine:Z
      - timemachine-var-lib-samba:/var/lib/samba
      - timemachine-var-cache-samba:/var/cache/samba
      - timemachine-run-samba:/run/samba
  varken:
    container_name: varken
    env_file:
      - vars.env
    image: boerderij/varken:latest
    restart: unless-stopped
    volumes:
      - ./config/varken.ini:/config/varken.ini:Z
  volumerize:
    container_name: volumerize
    env_file:
      - vars.env
    environment:
      VOLUMERIZE_CONTAINERS: jackett sonarr radarr overseerr syncthing homeassistant grafana prometheus loki influxdb tautulli timemachine
      VOLUMERIZE_FULL_IF_OLDER_THAN: 28D
      VOLUMERIZE_JOBBER_TIME: 0 0 4 * * *
      VOLUMERIZE_SOURCE: /source
      VOLUMERIZE_TARGET: file:///target
    image: blacklabelops/volumerize:1.7.1
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:z
      - volumerize-cache:/volumerize-cache
      - /mnt/storage/backup:/target:Z
      - jackett-config:/source/jackett-config:ro
      - sonarr-config:/source/sonarr-config:ro
      - radarr-config:/source/radarr-config:ro
      - overseerr-config:/source/overseerr-config:ro
      - syncthing-config:/source/syncthing-config:ro
      - homeassistant-config:/source/homeassistant-config:ro
      - grafana-data:/source/grafana-data:ro
      - prometheus-config:/source/prometheus-config:ro
      - prometheus-data:/source/prometheus-data:ro
      - loki-data:/source/loki-data:ro
      - influxdb-data:/source/influxdb-data:ro
      - tautulli-data:/source/tautulli-data:ro
      - timemachine-var-lib-samba:/source/timemachine-var-lib-samba:ro
      - timemachine-var-cache-samba:/source/timemachine-var-cache-samba:ro
      - timemachine-run-samba:/source/timemachine-run-samba:ro
      - tailscale-data:/source/tailscale-data:ro
      - bazarr-config:/source/bazarr-config:ro
      - apprise-config:/source/apprise-config:ro
  watchtower:
    container_name: watchtower
    env_file:
      - vars.env
    image: containrrr/watchtower
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:z
version: "3.8"
volumes:
  apprise-config: null
  bazarr-config: null
  grafana-data: null
  homeassistant-config: null
  influxdb-data: null
  jackett-config: null
  letsencrypt-certs: null
  loki-data: null
  overseerr-config: null
  prometheus-config: null
  prometheus-data: null
  radarr-config: null
  sonarr-config: null
  syncthing-config: null
  tailscale-data: null
  tautulli-data: null
  timemachine-run-samba: null
  timemachine-var-cache-samba: null
  timemachine-var-lib-samba: null
  volumerize-cache: null
