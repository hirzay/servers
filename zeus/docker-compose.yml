version: "3.8"
services:
  nvidia_exporter:
    deploy:
      resources:
        reservations:
          devices:
            - capabilities: [gpu]
    container_name: nvidia_exporter
    image: nvcr.io/nvidia/k8s/dcgm-exporter:2.3.4-2.6.4-ubuntu20.04
    restart: unless-stopped
  syncthing_exporter:
    image: f100024/syncthing_exporter:latest
    container_name: syncthing_exporter
    environment:
      SYNCTHING_URI: "http://syncthing:8384/"
      # This application is only accessible from my Tailscale network, so an access key is okay here
      SYNCTHING_TOKEN: "Gx4RRiqFLaqcx3Z4MD2ZokjaWmW4DweP"
    restart: unless-stopped
  blackbox:
    container_name: blackbox
    image: prom/blackbox-exporter:master
    restart: unless-stopped
    command: --config.file=/config/blackbox.yml
    volumes:
      - ./config/blackbox:/config:Z
  # watchtower:
  #   image: containrrr/watchtower
  #   container_name: watchtower
  #   restart: unless-stopped
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock:z
  speedtest:
    container_name: speedtest
    image: jraviles/prometheus_speedtest:latest
    restart: unless-stopped
  timemachine:
    network_mode: "host"
    restart: unless-stopped
    volumes:
      - /mnt/timemachine:/opt/timemachine:Z
      - timemachine-var-lib-samba:/var/lib/samba
      - timemachine-var-cache-samba:/var/cache/samba
      - timemachine-run-samba:/run/samba
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
    container_name: timemachine
    image: mbentley/timemachine:smb
  flaresolverr:
    container_name: flaresolverr
    image: ghcr.io/flaresolverr/flaresolverr:latest
    restart: unless-stopped
  tautulli:
    container_name: tautulli
    image: ghcr.io/tautulli/tautulli:latest
    restart: unless-stopped
    volumes:
      - tautulli-data:/config
      - /mnt/storage/plex/Plex\ Media\ Server/Logs:/plex_logs:ro,z
    env_file:
      - "vars.env"
  varken:
    container_name: varken
    image: boerderij/varken:latest
    restart: unless-stopped
    volumes:
      - ./config/varken.ini:/config/varken.ini:Z
    depends_on:
      - influxdb
      - tautulli
    env_file:
      - "vars.env"
  influxdb:
    container_name: influxdb
    image: influxdb:alpine
    restart: unless-stopped
    volumes:
      - influxdb-data:/var/lib/influxdb2
    env_file:
      - "vars.env"
  nginx_public_exporter:
    container_name: nginx_public_exporter
    depends_on:
      - nginx_public
    image: nginx/nginx-prometheus-exporter:latest
    command: -nginx.scrape-uri=http://nginx_public:8080/stub_status
    restart: unless-stopped
    env_file:
      - "vars.env"
  nginx_tailscale_exporter:
    container_name: nginx_tailscale_exporter
    depends_on:
      - nginx_tailscale
    image: nginx/nginx-prometheus-exporter:latest
    command: -nginx.scrape-uri=http://nginx_tailscale:8080/stub_status
    restart: unless-stopped
    env_file:
      - "vars.env"
  node_exporter:
    image: quay.io/prometheus/node-exporter:latest
    container_name: node_exporter
    command:
      - "--path.rootfs=/host"
    network_mode: host
    pid: host
    restart: unless-stopped
    volumes:
      - "/:/host:ro,rslave"
    env_file:
      - "vars.env"
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    privileged: true
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    restart: unless-stopped
    env_file:
      - "vars.env"
  promtail:
    depends_on:
      - loki
    image: grafana/promtail:latest
    container_name: promtail
    command: -config.file=/etc/promtail/promtail.yml
    volumes:
      - ./config/promtail.yml:/etc/promtail/promtail.yml:ro,Z
      - /var/log/journal:/var/log/journal:ro
      - /run/log/journal:/run/log/journal:ro
      - /etc/machine-id:/etc/machine-id:ro
    restart: unless-stopped
    env_file:
      - "vars.env"
  tailscale:
    image: tailscale/tailscale
    container_name: tailscale
    cap_add:
      - "NET_ADMIN"
      - "SYS_MODULE"
    command: tailscaled --statedir /dev/tailscale
    network_mode: host
    volumes:
      - /var/lib:/var/lib
      - /dev/net/tun:/dev/net/tun
      - tailscale-data:/tailscale
    restart: unless-stopped
    env_file:
      - "vars.env"
  certbot:
    image: certbot/dns-route53
    container_name: certbot
    command: |
      certonly
      --cert-name "shepherdjerred.com"
      -n
      --agree-tos
      -m shepherdjerred@gmail.com
      --dns-route53
      -d tailscale.zeus.shepherdjerred.com
      -d public.zeus.shepherdjerred.com
      -d homeassistant.tailscale.zeus.shepherdjerred.com
      -d homeassistant.public.zeus.shepherdjerred.com
      -d plex.tailscale.zeus.shepherdjerred.com
      -d plex.public.zeus.shepherdjerred.com
      -d overseerr.tailscale.zeus.shepherdjerred.com
      -d overseerr.public.zeus.shepherdjerred.com
      -d influxdb.tailscale.zeus.shepherdjerred.com
    volumes:
      - ./config/credentials:/root/.aws/credentials:ro,Z
      - letsencrypt-certs:/etc/letsencrypt
    env_file:
      - "vars.env"
  grafana:
    image: grafana/grafana-oss:latest
    container_name: grafana
    volumes:
      - ./config/grafana.ini:/etc/grafana/grafana.ini:ro,Z
      - grafana-data:/var/lib/grafana
    depends_on:
      - prometheus
      - loki
      - influxdb
    restart: unless-stopped
    env_file:
      - "vars.env"
    environment:
      GF_INSTALL_PLUGINS: grafana-piechart-panel,grafana-worldmap-panel
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - prometheus-data:/prometheus
      - prometheus-config:/etc/prometheus/
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml:ro,Z
    extra_hosts:
      - host.docker.internal:host-gateway
    depends_on:
      - nginx_public_exporter
      - nginx_tailscale_exporter
      - cadvisor
    restart: unless-stopped
    env_file:
      - "vars.env"
  loki:
    image: grafana/loki:latest
    container_name: loki
    volumes:
      - loki-data:/etc/loki/
      - ./config/loki/loki.yaml:/etc/loki/local-config.yaml:ro,Z
      - ./config/loki/rules.yaml:/etc/loki/rules/fake/rules.yaml/:ro,Z
    restart: unless-stopped
    env_file:
      - "vars.env"
  nginx_public:
    image: nginx:alpine
    container_name: nginx_public
    ports:
      - 192.168.1.45:80:80
      - 192.168.1.45:443:443
      - 2601:602:8500:1b1f:325a:3aff:fe7b:6fd5:80:80
      - 2601:602:8500:1b1f:325a:3aff:fe7b:6fd5:443:443
    volumes:
      - ./static/public.html:/usr/share/nginx/html/index.html:ro,Z
      - ./config/nginx/includes:/etc/nginx/includes:ro,z
      - ./config/nginx/nginx-public.conf:/etc/nginx/nginx.conf:ro,Z
      - letsencrypt-certs:/etc/letsencrypt:ro
    depends_on:
      - plex
      - overseerr
      - homeassistant
    restart: unless-stopped
    extra_hosts:
      - "host.docker.internal:host-gateway"
    env_file:
      - "vars.env"
  nginx_tailscale:
    image: nginx:alpine
    container_name: nginx_tailscale
    ports:
      - 100.96.254.65:80:80
      - 100.96.254.65:443:443
      - fd7a:115c:a1e0:ab12:4843:cd96:6260:fe41:80:80
      - fd7a:115c:a1e0:ab12:4843:cd96:6260:fe41:443:443
    volumes:
      - ./static/tailscale.html:/usr/share/nginx/html/index.html:ro,Z
      - ./config/nginx/includes:/etc/nginx/includes:ro,z
      - ./config/nginx/nginx-tailscale.conf:/etc/nginx/nginx.conf:ro,Z
      - letsencrypt-certs:/etc/letsencrypt:ro
    depends_on:
      - plex
      - overseerr
      - homeassistant
    restart: unless-stopped
    extra_hosts:
      - "host.docker.internal:host-gateway"
    env_file:
      - "vars.env"
  plex:
    image: plexinc/pms-docker:latest
    container_name: plex
    deploy:
      resources:
        reservations:
          devices:
            - capabilities: [gpu]
    shm_size: 8GB
    environment:
      ADVERTISE_IP: http://67.171.2.123:32400,http://100.103.244.82:32400,http://192.168.1.45:32400
      NVIDIA_VISIBLE_DEVICES: all
      NVIDIA_DRIVER_CAPABILITIES: all
    ports:
      - 32400:32400/tcp
      - 3005:3005/tcp
      - 8324:8324/tcp
      - 32469:32469/tcp
      - 32410:32410/udp
      - 32412:32412/udp
      - 32413:32413/udp
      - 32414:32414/udp
    volumes:
      - /mnt/storage/plex:/config:z
      - /dev/shm:/transcode
      - /mnt/storage/media/tv:/data/tv:z
      - /mnt/storage/media/movies:/data/movies:z
      - /mnt/storage/media/other:/data/other:z
    restart: unless-stopped
    env_file:
      - "vars.env"
  syncthing:
    image: syncthing/syncthing:latest
    container_name: syncthing
    hostname: syncthing
    env_file:
      - "vars.env"
    volumes:
      - syncthing-config:/var/syncthing/
      - /mnt/storage/syncthing:/syncthing:Z
    ports:
      - 22000:22000/tcp
      - 22000:22000/udp
      - 21027:21027/udp
    restart: unless-stopped
  homeassistant:
    network_mode: host
    image: ghcr.io/home-assistant/home-assistant:stable
    container_name: homeassistant
    env_file:
      - "vars.env"
    volumes:
      - homeassistant-config:/config
      - ./config/homeassistant/configuration.yaml:/config/configuration.yaml:Z
      - ./config/homeassistant/secrets.yaml:/config/secrets.yaml:Z
    restart: unless-stopped
  overseerr:
    image: lscr.io/linuxserver/overseerr:latest
    container_name: overseerr
    env_file:
      - "vars.env"
    volumes:
      - overseerr-config:/config
    restart: unless-stopped
    depends_on:
      - radarr
      - sonarr
  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    env_file:
      - "vars.env"
    volumes:
      - radarr-config:/config
      - /mnt/storage/media/movies:/movies:z
      - /mnt/storage/syncthing/Torrents:/downloads:z
    restart: unless-stopped
    depends_on:
      - jackett
  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    env_file:
      - "vars.env"
    volumes:
      - sonarr-config:/config
      - /mnt/storage/media/tv:/tv:z
      - /mnt/storage/syncthing/Torrents:/downloads:z
    restart: unless-stopped
    depends_on:
      - jackett
  jackett:
    image: lscr.io/linuxserver/jackett:latest
    container_name: jackett
    env_file:
      - "vars.env"
    volumes:
      - jackett-config:/config
    restart: unless-stopped
  volumerize:
    image: blacklabelops/volumerize:1.7.1
    container_name: volumerize
    env_file:
      - "vars.env"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:z
      - volumerize-cache:/volumerize-cache
      - /mnt/storage/backup:/target:Z
      - jackett-config:/source/jackett-config:ro
      - sonarr-config:/source/sonarr-config:ro
      - radarr-config:/source/radarr-config:ro
      - overseerr-config:/source/overseerr-config:ro
      - syncthing-config:/source/syncthing-config:ro
      - homeassistant-config:/source/homeassistant-config:ro
      - grafana-data:/source/grafana-data:ro
      - prometheus-config:/source/prometheus-config:ro
      - prometheus-data:/source/prometheus-data:ro
      - loki-data:/source/loki-data:ro
      - influxdb-data:/source/influxdb-data:ro
      - tautulli-data:/source/tautulli-data:ro
      - timemachine-var-lib-samba:/source/timemachine-var-lib-samba:ro
      - timemachine-var-cache-samba:/source/timemachine-var-cache-samba:ro
      - timemachine-run-samba:/source/timemachine-run-samba:ro
    environment:
      VOLUMERIZE_SOURCE: "/source"
      VOLUMERIZE_TARGET: "file:///target"
      VOLUMERIZE_JOBBER_TIME: "0 0 4 * * *"
      VOLUMERIZE_CONTAINERS: "jackett sonarr radarr overseerr syncthing homeassistant grafana prometheus loki influxdb tautulli timemachine"
      VOLUMERIZE_FULL_IF_OLDER_THAN: 28D
    restart: unless-stopped
volumes:
  jackett-config:
  sonarr-config:
  radarr-config:
  overseerr-config:
  syncthing-config:
  homeassistant-config:
  grafana-data:
  prometheus-config:
  prometheus-data:
  loki-data:
  letsencrypt-certs:
  influxdb-data:
  tautulli-data:
  timemachine-var-lib-samba:
  timemachine-var-cache-samba:
  timemachine-run-samba:
  volumerize-cache:
  tailscale-data:
